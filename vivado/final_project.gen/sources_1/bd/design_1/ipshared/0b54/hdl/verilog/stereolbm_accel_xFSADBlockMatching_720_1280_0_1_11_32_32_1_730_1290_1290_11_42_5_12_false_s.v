// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module stereolbm_accel_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        left_clipped5_dout,
        left_clipped5_empty_n,
        left_clipped5_read,
        right_clipped6_dout,
        right_clipped6_empty_n,
        right_clipped6_read,
        p_disp_strm7_din,
        p_disp_strm7_full_n,
        p_disp_strm7_write,
        height_dout,
        height_empty_n,
        height_read,
        width_dout,
        width_empty_n,
        width_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] left_clipped5_dout;
input   left_clipped5_empty_n;
output   left_clipped5_read;
input  [7:0] right_clipped6_dout;
input   right_clipped6_empty_n;
output   right_clipped6_read;
output  [15:0] p_disp_strm7_din;
input   p_disp_strm7_full_n;
output   p_disp_strm7_write;
input  [9:0] height_dout;
input   height_empty_n;
output   height_read;
input  [10:0] width_dout;
input   width_empty_n;
output   width_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg left_clipped5_read;
reg right_clipped6_read;
reg p_disp_strm7_write;
reg height_read;
reg width_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    height_blk_n;
reg    width_blk_n;
wire   [10:0] height_cast392_fu_77_p1;
reg   [10:0] height_cast392_reg_127;
wire   [11:0] width_cast393_fu_81_p1;
reg   [11:0] width_cast393_reg_133;
wire   [11:0] add_ln360_fu_85_p2;
reg   [11:0] add_ln360_reg_139;
wire  signed [21:0] grp_fu_119_p3;
reg   [21:0] mul_ln360_reg_150;
wire    ap_CS_fsm_state4;
wire   [10:0] add73_fu_95_p2;
reg   [10:0] add73_reg_155;
wire    ap_CS_fsm_state5;
wire   [11:0] add79_fu_101_p2;
reg   [11:0] add79_reg_160;
wire   [10:0] sub180_fu_107_p2;
reg   [10:0] sub180_reg_165;
wire   [11:0] sub190_fu_113_p2;
reg   [11:0] sub190_reg_170;
wire    grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_start;
wire    grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_done;
wire    grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_idle;
wire    grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_ready;
wire    grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_left_clipped5_read;
wire    grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_right_clipped6_read;
wire   [15:0] grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_p_disp_strm7_din;
wire    grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_p_disp_strm7_write;
reg    grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_start_reg;
wire    ap_CS_fsm_state6;
reg    ap_block_state1;
wire   [9:0] grp_fu_119_p0;
wire   [3:0] grp_fu_119_p1;
wire   [11:0] grp_fu_119_p2;
reg    grp_fu_119_ce;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire   [10:0] grp_fu_119_p00;
wire   [21:0] grp_fu_119_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_start_reg = 1'b0;
end

stereolbm_accel_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_start),
    .ap_done(grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_done),
    .ap_idle(grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_idle),
    .ap_ready(grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_ready),
    .left_clipped5_dout(left_clipped5_dout),
    .left_clipped5_empty_n(left_clipped5_empty_n),
    .left_clipped5_read(grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_left_clipped5_read),
    .right_clipped6_dout(right_clipped6_dout),
    .right_clipped6_empty_n(right_clipped6_empty_n),
    .right_clipped6_read(grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_right_clipped6_read),
    .p_disp_strm7_din(grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_p_disp_strm7_din),
    .p_disp_strm7_full_n(p_disp_strm7_full_n),
    .p_disp_strm7_write(grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_p_disp_strm7_write),
    .add73(add73_reg_155),
    .sub180(sub180_reg_165),
    .bound1450(mul_ln360_reg_150),
    .cast718(add_ln360_reg_139),
    .add_ln360(add_ln360_reg_139),
    .add79(add79_reg_160),
    .sub190(sub190_reg_170)
);

stereolbm_accel_am_addmul_10ns_4ns_12ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 22 ))
am_addmul_10ns_4ns_12ns_22_4_1_U175(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_119_p0),
    .din1(grp_fu_119_p1),
    .din2(grp_fu_119_p2),
    .ce(grp_fu_119_ce),
    .dout(grp_fu_119_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_start_reg <= 1'b1;
        end else if ((grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_ready == 1'b1)) begin
            grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add73_reg_155 <= add73_fu_95_p2;
        add79_reg_160 <= add79_fu_101_p2;
        sub180_reg_165 <= sub180_fu_107_p2;
        sub190_reg_170 <= sub190_fu_113_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln360_reg_139 <= add_ln360_fu_85_p2;
        height_cast392_reg_127[9 : 0] <= height_cast392_fu_77_p1[9 : 0];
        width_cast393_reg_133[10 : 0] <= width_cast393_fu_81_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_ln360_reg_150 <= grp_fu_119_p3;
    end
end

always @ (*) begin
    if (((width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & ((width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))))) begin
        grp_fu_119_ce = 1'b0;
    end else begin
        grp_fu_119_ce = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_blk_n = height_empty_n;
    end else begin
        height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read = 1'b1;
    end else begin
        height_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        left_clipped5_read = grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_left_clipped5_read;
    end else begin
        left_clipped5_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        p_disp_strm7_write = grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_p_disp_strm7_write;
    end else begin
        p_disp_strm7_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        right_clipped6_read = grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_right_clipped6_read;
    end else begin
        right_clipped6_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_blk_n = width_empty_n;
    end else begin
        width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_read = 1'b1;
    end else begin
        width_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add73_fu_95_p2 = (height_cast392_reg_127 + 11'd5);

assign add79_fu_101_p2 = (width_cast393_reg_133 + 12'd5);

assign add_ln360_fu_85_p2 = (width_cast393_fu_81_p1 + 12'd10);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_fu_119_p0 = grp_fu_119_p00;

assign grp_fu_119_p00 = height_dout;

assign grp_fu_119_p1 = 11'd10;

assign grp_fu_119_p2 = grp_fu_119_p20;

assign grp_fu_119_p20 = add_ln360_fu_85_p2;

assign grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_start = grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_ap_start_reg;

assign height_cast392_fu_77_p1 = height_dout;

assign p_disp_strm7_din = grp_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_Pipeline_loop_row_loop_mux_loop_col_fu_60_p_disp_strm7_din;

assign sub180_fu_107_p2 = ($signed(height_cast392_reg_127) + $signed(11'd2043));

assign sub190_fu_113_p2 = ($signed(width_cast393_reg_133) + $signed(12'd4091));

assign width_cast393_fu_81_p1 = width_dout;

always @ (posedge ap_clk) begin
    height_cast392_reg_127[10] <= 1'b0;
    width_cast393_reg_133[11] <= 1'b0;
end

endmodule //stereolbm_accel_xFSADBlockMatching_720_1280_0_1_11_32_32_1_730_1290_1290_11_42_5_12_false_s
