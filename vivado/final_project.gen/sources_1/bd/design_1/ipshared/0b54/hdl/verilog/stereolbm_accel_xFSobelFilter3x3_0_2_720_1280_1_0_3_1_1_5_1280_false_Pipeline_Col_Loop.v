// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module stereolbm_accel_xFSobelFilter3x3_0_2_720_1280_1_0_3_1_1_5_1280_false_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgInputR_436_dout,
        imgInputR_436_empty_n,
        imgInputR_436_read,
        in_sobel_x_i_43_din,
        in_sobel_x_i_43_full_n,
        in_sobel_x_i_43_write,
        in_sobel_y_i_44_din,
        in_sobel_y_i_44_full_n,
        in_sobel_y_i_44_write,
        img_width,
        buf_V_address0,
        buf_V_ce0,
        buf_V_q0,
        buf_V_address1,
        buf_V_ce1,
        buf_V_we1,
        buf_V_d1,
        buf_V_1_address0,
        buf_V_1_ce0,
        buf_V_1_q0,
        buf_V_1_address1,
        buf_V_1_ce1,
        buf_V_1_we1,
        buf_V_1_d1,
        buf_V_2_address0,
        buf_V_2_ce0,
        buf_V_2_q0,
        buf_V_2_address1,
        buf_V_2_ce1,
        buf_V_2_we1,
        buf_V_2_d1,
        tp_V,
        mid_V,
        bottom_V,
        row_ind_V_cast,
        cmp_i_i517_i,
        src_buf3_V_1_out,
        src_buf3_V_1_out_ap_vld,
        p_Val2_17_out,
        p_Val2_17_out_ap_vld,
        p_Val2_16_out,
        p_Val2_16_out_ap_vld,
        src_buf1_V_1_out,
        src_buf1_V_1_out_ap_vld,
        p_Val2_out,
        p_Val2_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] imgInputR_436_dout;
input   imgInputR_436_empty_n;
output   imgInputR_436_read;
output  [15:0] in_sobel_x_i_43_din;
input   in_sobel_x_i_43_full_n;
output   in_sobel_x_i_43_write;
output  [15:0] in_sobel_y_i_44_din;
input   in_sobel_y_i_44_full_n;
output   in_sobel_y_i_44_write;
input  [15:0] img_width;
output  [10:0] buf_V_address0;
output   buf_V_ce0;
input  [7:0] buf_V_q0;
output  [10:0] buf_V_address1;
output   buf_V_ce1;
output   buf_V_we1;
output  [7:0] buf_V_d1;
output  [10:0] buf_V_1_address0;
output   buf_V_1_ce0;
input  [7:0] buf_V_1_q0;
output  [10:0] buf_V_1_address1;
output   buf_V_1_ce1;
output   buf_V_1_we1;
output  [7:0] buf_V_1_d1;
output  [10:0] buf_V_2_address0;
output   buf_V_2_ce0;
input  [7:0] buf_V_2_q0;
output  [10:0] buf_V_2_address1;
output   buf_V_2_ce1;
output   buf_V_2_we1;
output  [7:0] buf_V_2_d1;
input  [1:0] tp_V;
input  [1:0] mid_V;
input  [1:0] bottom_V;
input  [1:0] row_ind_V_cast;
input  [0:0] cmp_i_i517_i;
output  [7:0] src_buf3_V_1_out;
output   src_buf3_V_1_out_ap_vld;
output  [7:0] p_Val2_17_out;
output   p_Val2_17_out_ap_vld;
output  [7:0] p_Val2_16_out;
output   p_Val2_16_out_ap_vld;
output  [7:0] src_buf1_V_1_out;
output   src_buf1_V_1_out_ap_vld;
output  [7:0] p_Val2_out;
output   p_Val2_out_ap_vld;

reg ap_idle;
reg imgInputR_436_read;
reg in_sobel_x_i_43_write;
reg in_sobel_y_i_44_write;
reg buf_V_ce0;
reg[10:0] buf_V_address1;
reg buf_V_ce1;
reg buf_V_we1;
reg[7:0] buf_V_d1;
reg buf_V_1_ce0;
reg[10:0] buf_V_1_address1;
reg buf_V_1_ce1;
reg buf_V_1_we1;
reg[7:0] buf_V_1_d1;
reg buf_V_2_ce0;
reg[10:0] buf_V_2_address1;
reg buf_V_2_ce1;
reg buf_V_2_we1;
reg[7:0] buf_V_2_d1;
reg src_buf3_V_1_out_ap_vld;
reg p_Val2_17_out_ap_vld;
reg p_Val2_16_out_ap_vld;
reg src_buf1_V_1_out_ap_vld;
reg p_Val2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1072_reg_617;
wire   [0:0] cmp_i_i517_i_read_reg_586;
reg    ap_predicate_op58_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1072_reg_617_pp0_iter2_reg;
reg   [0:0] icmp_ln1064_reg_626;
reg   [0:0] icmp_ln1064_reg_626_pp0_iter2_reg;
reg    ap_predicate_op94_write_state4;
reg    ap_predicate_op95_write_state4;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1072_fu_372_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    imgInputR_436_blk_n;
wire    ap_block_pp0_stage0;
reg    in_sobel_x_i_43_blk_n;
reg    in_sobel_y_i_44_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [1:0] row_ind_V_cast_read_reg_590;
wire   [1:0] bottom_V_read_reg_594;
reg   [12:0] col_V_1_reg_609;
reg   [0:0] icmp_ln1072_reg_617_pp0_iter1_reg;
wire   [10:0] trunc_ln228_fu_401_p1;
reg   [10:0] trunc_ln228_reg_621;
wire   [0:0] icmp_ln1064_fu_404_p2;
wire    call_ret_xFSobel3x3_1_1_0_3_s_fu_318_ap_ready;
wire   [15:0] call_ret_xFSobel3x3_1_1_0_3_s_fu_318_ap_return_0;
wire   [15:0] call_ret_xFSobel3x3_1_1_0_3_s_fu_318_ap_return_1;
wire   [7:0] src_buf1_V_fu_440_p6;
wire   [7:0] src_buf2_V_fu_454_p6;
wire   [7:0] src_buf3_V_fu_468_p6;
wire   [63:0] zext_ln587_1_fu_389_p1;
wire   [63:0] zext_ln587_fu_395_p1;
wire   [63:0] zext_ln231_fu_409_p1;
reg   [12:0] col_V_fu_94;
wire   [12:0] col_V_2_fu_378_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_col_V_1;
reg   [7:0] src_buf1_V_2_fu_98;
reg   [7:0] src_buf2_V_2_fu_102;
reg   [7:0] src_buf3_V_2_fu_106;
reg   [7:0] src_buf2_V_1_fu_110;
reg   [7:0] src_buf1_V_1_fu_114;
reg   [7:0] src_buf3_V_1_fu_118;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln1072_fu_368_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_438;
reg    ap_condition_444;
reg    ap_condition_448;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

stereolbm_accel_xFSobel3x3_1_1_0_3_s call_ret_xFSobel3x3_1_1_0_3_s_fu_318(
    .ap_ready(call_ret_xFSobel3x3_1_1_0_3_s_fu_318_ap_ready),
    .p_read2(src_buf1_V_2_fu_98),
    .p_read5(src_buf1_V_1_fu_114),
    .p_read6(src_buf1_V_fu_440_p6),
    .p_read7(src_buf2_V_2_fu_102),
    .p_read8(src_buf2_V_fu_454_p6),
    .p_read9(src_buf3_V_2_fu_106),
    .p_read10(src_buf3_V_1_fu_118),
    .p_read11(src_buf3_V_fu_468_p6),
    .ap_return_0(call_ret_xFSobel3x3_1_1_0_3_s_fu_318_ap_return_0),
    .ap_return_1(call_ret_xFSobel3x3_1_1_0_3_s_fu_318_ap_return_1)
);

stereolbm_accel_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U61(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(8'd0),
    .din4(tp_V),
    .dout(src_buf1_V_fu_440_p6)
);

stereolbm_accel_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U62(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(8'd0),
    .din4(mid_V),
    .dout(src_buf2_V_fu_454_p6)
);

stereolbm_accel_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U63(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(8'd0),
    .din4(bottom_V),
    .dout(src_buf3_V_fu_468_p6)
);

stereolbm_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1072_fu_372_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_V_fu_94 <= col_V_2_fu_378_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_V_fu_94 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf1_V_1_fu_114 <= 8'd0;
        end else if (((icmp_ln1072_reg_617_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf1_V_1_fu_114 <= src_buf1_V_fu_440_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf1_V_2_fu_98 <= 8'd0;
        end else if (((icmp_ln1072_reg_617_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf1_V_2_fu_98 <= src_buf1_V_1_fu_114;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf2_V_1_fu_110 <= 8'd0;
        end else if (((icmp_ln1072_reg_617_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf2_V_1_fu_110 <= src_buf2_V_fu_454_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf2_V_2_fu_102 <= 8'd0;
        end else if (((icmp_ln1072_reg_617_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf2_V_2_fu_102 <= src_buf2_V_1_fu_110;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf3_V_1_fu_118 <= 8'd0;
        end else if (((icmp_ln1072_reg_617_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf3_V_1_fu_118 <= src_buf3_V_fu_468_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf3_V_2_fu_106 <= 8'd0;
        end else if (((icmp_ln1072_reg_617_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            src_buf3_V_2_fu_106 <= src_buf3_V_1_fu_118;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_V_1_reg_609 <= ap_sig_allocacmp_col_V_1;
        icmp_ln1072_reg_617 <= icmp_ln1072_fu_372_p2;
        icmp_ln1072_reg_617_pp0_iter1_reg <= icmp_ln1072_reg_617;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1072_reg_617 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1064_reg_626 <= icmp_ln1064_fu_404_p2;
        trunc_ln228_reg_621 <= trunc_ln228_fu_401_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1064_reg_626_pp0_iter2_reg <= icmp_ln1064_reg_626;
        icmp_ln1072_reg_617_pp0_iter2_reg <= icmp_ln1072_reg_617_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((icmp_ln1072_fu_372_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_V_1 = 13'd0;
    end else begin
        ap_sig_allocacmp_col_V_1 = col_V_fu_94;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_438)) begin
        if (((cmp_i_i517_i == 1'd1) & (row_ind_V_cast_read_reg_590 == 2'd1))) begin
            buf_V_1_address1 = zext_ln587_fu_395_p1;
        end else if (((cmp_i_i517_i_read_reg_586 == 1'd0) & (bottom_V_read_reg_594 == 2'd1))) begin
            buf_V_1_address1 = zext_ln587_1_fu_389_p1;
        end else begin
            buf_V_1_address1 = 'bx;
        end
    end else begin
        buf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i == 1'd1) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (row_ind_V_cast_read_reg_590 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i_read_reg_586 == 1'd0) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (bottom_V_read_reg_594 == 2'd1)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_438)) begin
        if (((cmp_i_i517_i == 1'd1) & (row_ind_V_cast_read_reg_590 == 2'd1))) begin
            buf_V_1_d1 = imgInputR_436_dout;
        end else if (((cmp_i_i517_i_read_reg_586 == 1'd0) & (bottom_V_read_reg_594 == 2'd1))) begin
            buf_V_1_d1 = 8'd0;
        end else begin
            buf_V_1_d1 = 'bx;
        end
    end else begin
        buf_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i == 1'd1) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (row_ind_V_cast_read_reg_590 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i_read_reg_586 == 1'd0) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (bottom_V_read_reg_594 == 2'd1)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_438)) begin
        if ((1'b1 == ap_condition_448)) begin
            buf_V_2_address1 = zext_ln587_fu_395_p1;
        end else if ((1'b1 == ap_condition_444)) begin
            buf_V_2_address1 = zext_ln587_1_fu_389_p1;
        end else begin
            buf_V_2_address1 = 'bx;
        end
    end else begin
        buf_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(row_ind_V_cast_read_reg_590 == 2'd0) & ~(row_ind_V_cast_read_reg_590 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i == 1'd1) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(bottom_V_read_reg_594 == 2'd0) & ~(bottom_V_read_reg_594 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i_read_reg_586 == 1'd0) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_438)) begin
        if ((1'b1 == ap_condition_448)) begin
            buf_V_2_d1 = imgInputR_436_dout;
        end else if ((1'b1 == ap_condition_444)) begin
            buf_V_2_d1 = 8'd0;
        end else begin
            buf_V_2_d1 = 'bx;
        end
    end else begin
        buf_V_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(row_ind_V_cast_read_reg_590 == 2'd0) & ~(row_ind_V_cast_read_reg_590 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i == 1'd1) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(bottom_V_read_reg_594 == 2'd0) & ~(bottom_V_read_reg_594 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i_read_reg_586 == 1'd0) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_438)) begin
        if (((cmp_i_i517_i == 1'd1) & (row_ind_V_cast_read_reg_590 == 2'd0))) begin
            buf_V_address1 = zext_ln587_fu_395_p1;
        end else if (((cmp_i_i517_i_read_reg_586 == 1'd0) & (bottom_V_read_reg_594 == 2'd0))) begin
            buf_V_address1 = zext_ln587_1_fu_389_p1;
        end else begin
            buf_V_address1 = 'bx;
        end
    end else begin
        buf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i == 1'd1) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (row_ind_V_cast_read_reg_590 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i_read_reg_586 == 1'd0) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (bottom_V_read_reg_594 == 2'd0)))) begin
        buf_V_ce1 = 1'b1;
    end else begin
        buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_438)) begin
        if (((cmp_i_i517_i == 1'd1) & (row_ind_V_cast_read_reg_590 == 2'd0))) begin
            buf_V_d1 = imgInputR_436_dout;
        end else if (((cmp_i_i517_i_read_reg_586 == 1'd0) & (bottom_V_read_reg_594 == 2'd0))) begin
            buf_V_d1 = 8'd0;
        end else begin
            buf_V_d1 = 'bx;
        end
    end else begin
        buf_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i == 1'd1) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (row_ind_V_cast_read_reg_590 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i517_i_read_reg_586 == 1'd0) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (bottom_V_read_reg_594 == 2'd0)))) begin
        buf_V_we1 = 1'b1;
    end else begin
        buf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op58_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgInputR_436_blk_n = imgInputR_436_empty_n;
    end else begin
        imgInputR_436_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op58_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgInputR_436_read = 1'b1;
    end else begin
        imgInputR_436_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op94_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        in_sobel_x_i_43_blk_n = in_sobel_x_i_43_full_n;
    end else begin
        in_sobel_x_i_43_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op94_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        in_sobel_x_i_43_write = 1'b1;
    end else begin
        in_sobel_x_i_43_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op95_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        in_sobel_y_i_44_blk_n = in_sobel_y_i_44_full_n;
    end else begin
        in_sobel_y_i_44_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op95_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        in_sobel_y_i_44_write = 1'b1;
    end else begin
        in_sobel_y_i_44_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1072_reg_617_pp0_iter2_reg == 1'd0))) begin
        p_Val2_16_out_ap_vld = 1'b1;
    end else begin
        p_Val2_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1072_reg_617_pp0_iter2_reg == 1'd0))) begin
        p_Val2_17_out_ap_vld = 1'b1;
    end else begin
        p_Val2_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1072_reg_617_pp0_iter2_reg == 1'd0))) begin
        p_Val2_out_ap_vld = 1'b1;
    end else begin
        p_Val2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1072_reg_617_pp0_iter2_reg == 1'd0))) begin
        src_buf1_V_1_out_ap_vld = 1'b1;
    end else begin
        src_buf1_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1072_reg_617_pp0_iter2_reg == 1'd0))) begin
        src_buf3_V_1_out_ap_vld = 1'b1;
    end else begin
        src_buf3_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (((ap_predicate_op95_write_state4 == 1'b1) & (in_sobel_y_i_44_full_n == 1'b0)) | ((ap_predicate_op94_write_state4 == 1'b1) & (in_sobel_x_i_43_full_n == 1'b0)))) | ((ap_predicate_op58_read_state2 == 1'b1) & (imgInputR_436_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (((ap_predicate_op95_write_state4 == 1'b1) & (in_sobel_y_i_44_full_n == 1'b0)) | ((ap_predicate_op94_write_state4 == 1'b1) & (in_sobel_x_i_43_full_n == 1'b0)))) | ((ap_predicate_op58_read_state2 == 1'b1) & (imgInputR_436_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (((ap_predicate_op95_write_state4 == 1'b1) & (in_sobel_y_i_44_full_n == 1'b0)) | ((ap_predicate_op94_write_state4 == 1'b1) & (in_sobel_x_i_43_full_n == 1'b0)))) | ((ap_predicate_op58_read_state2 == 1'b1) & (imgInputR_436_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op58_read_state2 == 1'b1) & (imgInputR_436_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (((ap_predicate_op95_write_state4 == 1'b1) & (in_sobel_y_i_44_full_n == 1'b0)) | ((ap_predicate_op94_write_state4 == 1'b1) & (in_sobel_x_i_43_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_438 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln1072_reg_617 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_444 = (~(bottom_V_read_reg_594 == 2'd0) & ~(bottom_V_read_reg_594 == 2'd1) & (cmp_i_i517_i_read_reg_586 == 1'd0));
end

always @ (*) begin
    ap_condition_448 = (~(row_ind_V_cast_read_reg_590 == 2'd0) & ~(row_ind_V_cast_read_reg_590 == 2'd1) & (cmp_i_i517_i == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op58_read_state2 = ((cmp_i_i517_i == 1'd1) & (icmp_ln1072_reg_617 == 1'd1));
end

always @ (*) begin
    ap_predicate_op94_write_state4 = ((icmp_ln1064_reg_626_pp0_iter2_reg == 1'd0) & (icmp_ln1072_reg_617_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op95_write_state4 = ((icmp_ln1064_reg_626_pp0_iter2_reg == 1'd0) & (icmp_ln1072_reg_617_pp0_iter2_reg == 1'd1));
end

assign bottom_V_read_reg_594 = bottom_V;

assign buf_V_1_address0 = zext_ln231_fu_409_p1;

assign buf_V_2_address0 = zext_ln231_fu_409_p1;

assign buf_V_address0 = zext_ln231_fu_409_p1;

assign cmp_i_i517_i_read_reg_586 = cmp_i_i517_i;

assign col_V_2_fu_378_p2 = (ap_sig_allocacmp_col_V_1 + 13'd1);

assign icmp_ln1064_fu_404_p2 = ((col_V_1_reg_609 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln1072_fu_372_p2 = ((zext_ln1072_fu_368_p1 < img_width) ? 1'b1 : 1'b0);

assign in_sobel_x_i_43_din = call_ret_xFSobel3x3_1_1_0_3_s_fu_318_ap_return_0;

assign in_sobel_y_i_44_din = call_ret_xFSobel3x3_1_1_0_3_s_fu_318_ap_return_1;

assign p_Val2_16_out = src_buf2_V_2_fu_102;

assign p_Val2_17_out = src_buf3_V_2_fu_106;

assign p_Val2_out = src_buf1_V_2_fu_98;

assign row_ind_V_cast_read_reg_590 = row_ind_V_cast;

assign src_buf1_V_1_out = src_buf1_V_1_fu_114;

assign src_buf3_V_1_out = src_buf3_V_1_fu_118;

assign trunc_ln228_fu_401_p1 = col_V_1_reg_609[10:0];

assign zext_ln1072_fu_368_p1 = ap_sig_allocacmp_col_V_1;

assign zext_ln231_fu_409_p1 = trunc_ln228_reg_621;

assign zext_ln587_1_fu_389_p1 = col_V_1_reg_609;

assign zext_ln587_fu_395_p1 = col_V_1_reg_609;

endmodule //stereolbm_accel_xFSobelFilter3x3_0_2_720_1280_1_0_3_1_1_5_1280_false_Pipeline_Col_Loop
