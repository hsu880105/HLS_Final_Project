// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module stereolbm_accel_AXIstream2xfMat_0_720_1280_1_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_inR_TDATA,
        stream_inR_TVALID,
        stream_inR_TREADY,
        p_read,
        p_read1,
        imgInputR_436_din,
        imgInputR_436_full_n,
        imgInputR_436_write,
        imgInputR_rows_c_din,
        imgInputR_rows_c_full_n,
        imgInputR_rows_c_write,
        imgInputR_cols_c_din,
        imgInputR_cols_c_full_n,
        imgInputR_cols_c_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] stream_inR_TDATA;
input   stream_inR_TVALID;
output   stream_inR_TREADY;
input  [31:0] p_read;
input  [31:0] p_read1;
output  [7:0] imgInputR_436_din;
input   imgInputR_436_full_n;
output   imgInputR_436_write;
output  [31:0] imgInputR_rows_c_din;
input   imgInputR_rows_c_full_n;
output   imgInputR_rows_c_write;
output  [31:0] imgInputR_cols_c_din;
input   imgInputR_cols_c_full_n;
output   imgInputR_cols_c_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg imgInputR_436_write;
reg imgInputR_rows_c_write;
reg imgInputR_cols_c_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    imgInputR_rows_c_blk_n;
reg    imgInputR_cols_c_blk_n;
wire    grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_start;
wire    grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_done;
wire    grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_idle;
wire    grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_ready;
wire   [7:0] grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_imgInputR_436_din;
wire    grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_imgInputR_436_write;
wire    grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_stream_inR_TREADY;
reg    grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln23_fu_111_p2;
wire    ap_CS_fsm_state3;
reg   [9:0] i_06_fu_58;
wire   [9:0] i_10_fu_116_p2;
reg    ap_block_state1;
wire   [31:0] zext_ln23_fu_107_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    regslice_both_stream_inR_U_apdone_blk;
wire   [15:0] stream_inR_TDATA_int_regslice;
wire    stream_inR_TVALID_int_regslice;
reg    stream_inR_TREADY_int_regslice;
wire    regslice_both_stream_inR_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_start_reg = 1'b0;
end

stereolbm_accel_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_start),
    .ap_done(grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_done),
    .ap_idle(grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_idle),
    .ap_ready(grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_ready),
    .stream_inR_TVALID(stream_inR_TVALID_int_regslice),
    .imgInputR_436_din(grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_imgInputR_436_din),
    .imgInputR_436_full_n(imgInputR_436_full_n),
    .imgInputR_436_write(grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_imgInputR_436_write),
    .p_read1(p_read1),
    .stream_inR_TDATA(stream_inR_TDATA_int_regslice),
    .stream_inR_TREADY(grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_stream_inR_TREADY)
);

stereolbm_accel_regslice_both #(
    .DataWidth( 16 ))
regslice_both_stream_inR_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(stream_inR_TDATA),
    .vld_in(stream_inR_TVALID),
    .ack_in(regslice_both_stream_inR_U_ack_in),
    .data_out(stream_inR_TDATA_int_regslice),
    .vld_out(stream_inR_TVALID_int_regslice),
    .ack_out(stream_inR_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_inR_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln23_fu_111_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln23_fu_111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_start_reg <= 1'b1;
        end else if ((grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_ready == 1'b1)) begin
            grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (imgInputR_cols_c_full_n == 1'b0) | (imgInputR_rows_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_06_fu_58 <= 10'd0;
    end else if (((icmp_ln23_fu_111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_06_fu_58 <= i_10_fu_116_p2;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (imgInputR_cols_c_full_n == 1'b0) | (imgInputR_rows_c_full_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_111_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_111_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        imgInputR_436_write = grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_imgInputR_436_write;
    end else begin
        imgInputR_436_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInputR_cols_c_blk_n = imgInputR_cols_c_full_n;
    end else begin
        imgInputR_cols_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (imgInputR_cols_c_full_n == 1'b0) | (imgInputR_rows_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInputR_cols_c_write = 1'b1;
    end else begin
        imgInputR_cols_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInputR_rows_c_blk_n = imgInputR_rows_c_full_n;
    end else begin
        imgInputR_rows_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (imgInputR_cols_c_full_n == 1'b0) | (imgInputR_rows_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInputR_rows_c_write = 1'b1;
    end else begin
        imgInputR_rows_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        stream_inR_TREADY_int_regslice = grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_stream_inR_TREADY;
    end else begin
        stream_inR_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (imgInputR_cols_c_full_n == 1'b0) | (imgInputR_rows_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_111_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (imgInputR_cols_c_full_n == 1'b0) | (imgInputR_rows_c_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_start = grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_ap_start_reg;

assign i_10_fu_116_p2 = (i_06_fu_58 + 10'd1);

assign icmp_ln23_fu_111_p2 = (($signed(zext_ln23_fu_107_p1) < $signed(p_read)) ? 1'b1 : 1'b0);

assign imgInputR_436_din = grp_AXIstream2xfMat_0_720_1280_1_1_Pipeline_loop_col_axi2mat_fu_90_imgInputR_436_din;

assign imgInputR_cols_c_din = p_read1;

assign imgInputR_rows_c_din = p_read;

assign stream_inR_TREADY = regslice_both_stream_inR_U_ack_in;

assign zext_ln23_fu_107_p1 = i_06_fu_58;

endmodule //stereolbm_accel_AXIstream2xfMat_0_720_1280_1_1
